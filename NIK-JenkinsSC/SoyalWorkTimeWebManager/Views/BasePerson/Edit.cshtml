@using SoyalWorkTimeWebManager.ViewModels.Assignments
@model WorkTimeModel.Person

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <fieldset>
        <legend>Person</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.NameUa)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NameUa)
            @Html.ValidationMessageFor(model => model.NameUa)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CardBoardNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CardBoardNumber)
            @Html.ValidationMessageFor(model => model.CardBoardNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Birth)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Birth)
            @Html.ValidationMessageFor(model => model.Birth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CardID, "Card")
        </div>
        <div class="editor-field">
            @*@Html.DropDownList("CardID", String.Empty)*@
            Site Code : Card Code <br/>
            @Html.EditorFor(model => model.Card.SiteCode):@Html.EditorFor(model => model.Card.Code)
            @Html.ValidationMessageFor(model => model.CardID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProfessionalClass)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProfessionalClass)
            @Html.ValidationMessageFor(model => model.ProfessionalClass)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post)
            @Html.ValidationMessageFor(model => model.Post)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubUnit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubUnit)
            @Html.ValidationMessageFor(model => model.SubUnit)
        </div>
        
        <div class="editor-label">
            Work Style
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.WorkStyle)
            @Html.ValidationMessageFor(model => model.WorkStyle)
        </div>

        <div class="editor-label">
            Group
        </div>
        <div class="editor-field" id="accordion">
           
            <table class="bordered">
                @{ List<AssignedGroups> groups = ViewBag.Groups;
                    foreach (var current in groups)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" name="selectedGroups" value="@current.GroupName" @Html.Raw(current.Assigned ? "checked=\"checked\"" : "") /> @current.GroupName
                            </td>
                        </tr>
                    }

                }
            </table>
        </div>

        

        @Html.HiddenFor(model => model.ID)

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
